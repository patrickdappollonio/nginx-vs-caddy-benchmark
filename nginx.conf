# use all CPU cores
worker_processes auto;

# number of file descriptors used for nginx
worker_rlimit_nofile 100000;

# only log critical errors
error_log /var/log/nginx/error.log crit;

events {
  worker_connections 4000;
  use epoll;
  multi_accept on;
}


http {
  # cache informations about FDs, frequently accessed files
  # can boost performance, but you need to test those values
  open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  # to boost I/O on HDD we can disable access logs
  access_log off;

  # copies data between one FD and other from within the kernel
  # faster than read() + write()
  sendfile on;

  # send headers in one piece, it is better than sending them one by one
  tcp_nopush on;

  # don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # request timed out -- default 60
  client_body_timeout 10;

  # if client stop responding, free up memory -- default 60
  send_timeout 2;

  # server will close connection after this time -- default 75
  keepalive_timeout 30;

  upstream docker-nginx {
    server hello:8000;
  }

  # proxy_set_header   Host $host;
  # proxy_set_header   X-Real-IP $remote_addr;
  # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  # proxy_set_header   X-Forwarded-Host $server_name;

  server {
    listen [::]:443 ssl ipv6only=on;
    listen 443 ssl;

    ssl_certificate /etc/nginx/localhost.pem;
    ssl_certificate_key /etc/nginx/localhost-key.pem;

    location / {
      proxy_pass http://docker-nginx;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }
  }
}
